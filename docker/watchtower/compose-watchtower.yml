version: ${DOCKER_COMPOSE_VERSION:-3.7}

networks:
  ${NOTIFICATION_NETWORK:-notification-net}:      # Network for notification services
    external: true

services:
  watchtower:
    env_file:
      - ../env-docker.env    # Global environment variables
      - ./env-watchtower.env # Application-specific environment variables
    image: ${WATCHTOWER_IMAGE:-containrrr/watchtower:latest}
    container_name: ${CONTAINER_NAME:-watchtower}
    environment:
      - WATCHTOWER_CLEANUP=${CLEANUP:-true}
      - WATCHTOWER_LABEL_ENABLE=${LABEL_ENABLE:-true}
      - WATCHTOWER_INCLUDE_RESTARTING=${INCLUDE_RESTARTING:-true}
      - WATCHTOWER_NOTIFICATIONS=${NOTIFICATIONS:-email}
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${EMAIL_FROM:-watchtower@yourdomain.com}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${EMAIL_TO:-watchtower@yourdomain.com}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${EMAIL_SERVER:-mailrise}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${EMAIL_SERVER_PORT:-8025}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro   # Docker socket for container management
      - /etc/timezone:/etc/timezone:ro                 # Timezone data
    networks:
      - ${NOTIFICATION_NETWORK:-notification-net}
    healthcheck:
      test: 
        - "CMD"
        - "/bin/sh"
        - "-c"
        - "curl -f --unix-socket /var/run/docker.sock http://localhost/containers/json || exit 1"
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-20s}
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-40s}
    labels:
      # Enable automatic updates through Watchtower
      - com.centurylinklabs.watchtower.enable=true
    
    restart: unless-stopped