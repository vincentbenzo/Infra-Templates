version: ${DOCKER_COMPOSE_VERSION:-3.7}

networks:
  ${PROXY_NETWORK:-proxy-public-net}:
    external: true
  ${NOTIFICATION_NETWORK:-notification-net}:
    external: true

services:
  gitlab:
    env_file:
      - ../env-docker.env    # Global environment variables
      - ./env-gitlab.env     # Application-specific environment variables
    image: ${GITLAB_IMAGE:-gitlab/gitlab-ee:latest}
    container_name: ${CONTAINER_NAME:-gitlab}
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://${GITLAB_SUBDOMAIN:-git}.${BASE_DOMAIN:-yourdomain.com}'
        nginx['listen_port'] = ${APP_PORT:-4443}
        nginx['listen_https'] = false
        nginx['real_ip_trusted_addresses'] = [ '${REAL_IP_PROXY:-traefik}' ]
        nginx['real_ip_header'] = '${REAL_IP_HEADER:-X-Real-Ip}'
        nginx['real_ip_recursive'] = '${REAL_IP_RECURSIVE:-on}'
        # SMTP configuration
        gitlab_rails['smtp_enable'] = ${SMTP_ENABLE:-true}
        gitlab_rails['smtp_address'] = '${SMTP_HOST:-mailrise}'
        gitlab_rails['smtp_port'] = ${SMTP_PORT:-8025}
        gitlab_rails['smtp_domain'] = '${SMTP_DOMAIN:-mailrise}'
        gitlab_rails['smtp_tls'] = ${SMTP_TLS:-false}
        gitlab_rails['smtp_openssl_verify_mode'] = '${SMTP_VERIFY_MODE:-none}'
        gitlab_rails['smtp_enable_starttls_auto'] = ${SMTP_STARTTLS:-false}
        gitlab_rails['smtp_ssl'] = ${SMTP_SSL:-false}
        gitlab_rails['smtp_force_ssl'] = ${SMTP_FORCE_SSL:-false}
    volumes:
      - ${LICENSE_PATH:-./public.key}:/opt/gitlab/embedded/service/gitlab-rails/.license_encryption_key.pub
      - ${CONFIG_PATH:-./config}:/etc/gitlab
      - ${LOGS_PATH:-./logs}:/var/log/gitlab
      - ${DATA_PATH:-./data}:/var/opt/gitlab
    shm_size: ${SHM_SIZE:-256m}
    networks:
      - ${PROXY_NETWORK:-proxy-public-net}
      - ${NOTIFICATION_NETWORK:-notification-net}
    healthcheck:
      test: 
        - "CMD"
        - "/bin/sh"
        - "-c"
        - "curl -k --fail http://localhost:${APP_PORT:-4443}/users/sign_in && curl -k --fail https://${GITLAB_SUBDOMAIN:-git}.${BASE_DOMAIN:-yourdomain.com}/users/sign_in"
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-20s}
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-40s}
    labels:
    #connect the container to traefik and define which network to use
      - traefik.enable=true
      - traefik.docker.network=${PROXY_NETWORK:-proxy-public-net}
      #enabling http
      - traefik.http.routers.${CONTAINER_NAME:-gitlab}-http.rule=Host(`${GITLAB_SUBDOMAIN:-git}.${BASE_DOMAIN:-yourdomain.com}`)
      - traefik.http.routers.${CONTAINER_NAME:-gitlab}-http.entrypoints=http
      #Define and use of middelware to force http to https
      - traefik.http.middlewares.httptohttps.redirectscheme.scheme=https
      - traefik.http.routers.${CONTAINER_NAME:-gitlab}-http.middlewares=httptohttps
      #enabling https
      - traefik.http.routers.${CONTAINER_NAME:-gitlab}-https.rule=Host(`${GITLAB_SUBDOMAIN:-git}.${BASE_DOMAIN:-yourdomain.com}`)
      - traefik.http.routers.${CONTAINER_NAME:-gitlab}-https.entrypoints=https
      #Certificate resolver and certificates names to use for tls
      - traefik.http.routers.${CONTAINER_NAME:-gitlab}-https.tls.certresolver=${CERT_RESOLVER:-dnschallengeovh}
      - traefik.http.routers.${CONTAINER_NAME:-gitlab}-https.tls.domains[0].main=*.${BASE_DOMAIN:-yourdomain.com}
      - traefik.http.routers.${CONTAINER_NAME:-gitlab}-https.tls.domains[0].sans=${BASE_DOMAIN:-yourdomain.com}
      #Define what port to reach to access the container/service
      - traefik.http.routers.${CONTAINER_NAME:-gitlab}-https.service=${CONTAINER_NAME:-gitlab}_service
      - traefik.http.services.${CONTAINER_NAME:-gitlab}_service.loadbalancer.server.port=${APP_PORT:-4443}
      #Watchtower watching updates
      - com.centurylinklabs.watchtower.enable=true
    restart: unless-stopped