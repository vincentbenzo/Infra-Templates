version: ${DOCKER_COMPOSE_VERSION:-3.7}

networks:
  ${PROXY_NETWORK:-proxy-public-net}:
    external: true
  ${NOTIFICATION_NETWORK:-notification-net}:
    external: true
  ${JOPLIN_NETWORK:-joplin-internal}:
    internal: true

services:
  joplin_db:
    env_file:
      - ../env-docker.env    # Global environment variables
      - ./env-joplin.env     # Application-specific environment variables
    image: ${DB_IMAGE:-postgres:15}
    container_name: ${DB_CONTAINER_NAME:-joplin_db}
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER:-joplin}
      - POSTGRES_DB=${DB_NAME:-joplin_db}
    volumes:
      - ${DB_PATH:-./db/joplin}:/var/lib/postgresql/data
    networks:
      - ${JOPLIN_NETWORK:-joplin-internal}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-joplin} -d ${DB_NAME:-joplin_db}"]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-20s}
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-40s}
    labels:
      #Watchtower watching updates
      - com.centurylinklabs.watchtower.enable=true
    restart: unless-stopped

  joplin_app:
    env_file:
      - ../env-docker.env    # Global environment variables
      - ./env-joplin.env     # Application-specific environment variables
    image: ${JOPLIN_IMAGE:-joplin/server:latest}
    container_name: ${CONTAINER_NAME:-joplin_app}
    environment:
      - APP_PORT=${APP_PORT:-22300}
      - APP_BASE_URL=https://${JOPLIN_SUBDOMAIN:-notes}.${BASE_DOMAIN:-yourdomain.com}
      - DB_CLIENT=pg
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DATABASE=${DB_NAME:-joplin_db}
      - POSTGRES_USER=${DB_USER:-joplin}
      - POSTGRES_PORT=${DB_PORT:-5432}
      - POSTGRES_HOST=${DB_CONTAINER_NAME:-joplin_db}
      - MAILER_ENABLED=${MAILER_ENABLED:-1}
      - MAILER_HOST=${SMTP_HOST:-mailrise}
      - MAILER_PORT=${SMTP_PORT:-8025}
      - MAILER_SECURITY=${SMTP_SECURITY:-none}
      - MAILER_NOREPLY_EMAIL=noreply@${BASE_DOMAIN:-yourdomain.com}
    networks:
      - ${PROXY_NETWORK:-proxy-public-net}
      - ${JOPLIN_NETWORK:-joplin-internal}
      - ${NOTIFICATION_NETWORK:-notification-net}
    healthcheck:
      test:
        - "CMD"
        - "/bin/sh"
        - "-c"
        - "wget --no-verbose --tries=1 --spider http://localhost:${APP_PORT:-22300}/ && wget --no-verbose --tries=1 --spider https://${JOPLIN_SUBDOMAIN:-notes}.${BASE_DOMAIN:-yourdomain.com}/"
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-20s}
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-40s}
    labels:
    #connect the container to traefik and define which network to use
      - traefik.enable=true
      - traefik.docker.network=${PROXY_NETWORK:-proxy-public-net}
      #enabling http
      - traefik.http.routers.${CONTAINER_NAME:-joplin_app}-http.rule=Host(`${JOPLIN_SUBDOMAIN:-notes}.${BASE_DOMAIN:-yourdomain.com}`)
      - traefik.http.routers.${CONTAINER_NAME:-joplin_app}-http.entrypoints=http
      #Define and use of middelware to force http to https
      - traefik.http.middlewares.httptohttps.redirectscheme.scheme=https
      - traefik.http.routers.${CONTAINER_NAME:-joplin_app}-http.middlewares=httptohttps
      #enabling https
      - traefik.http.routers.${CONTAINER_NAME:-joplin_app}-https.rule=Host(`${JOPLIN_SUBDOMAIN:-notes}.${BASE_DOMAIN:-yourdomain.com}`)
      - traefik.http.routers.${CONTAINER_NAME:-joplin_app}-https.entrypoints=https
      #Certificate resolver and certificates names to use for tls
      - traefik.http.routers.${CONTAINER_NAME:-joplin_app}-https.tls.certresolver=${CERT_RESOLVER:-dnschallengeovh}
      - traefik.http.routers.${CONTAINER_NAME:-joplin_app}-https.tls.domains[0].main=*.${BASE_DOMAIN:-yourdomain.com}
      - traefik.http.routers.${CONTAINER_NAME:-joplin_app}-https.tls.domains[0].sans=${BASE_DOMAIN:-yourdomain.com}
      #Define what port to reach to access the container/service
      - traefik.http.routers.${CONTAINER_NAME:-joplin_app}-https.service=${CONTAINER_NAME:-joplin_app}_service
      - traefik.http.services.${CONTAINER_NAME:-joplin_app}_service.loadbalancer.server.port=${APP_PORT:-22300}
      #Watchtower watching updates
      - com.centurylinklabs.watchtower.enable=true
    depends_on:
      - joplin_db
    restart: unless-stopped